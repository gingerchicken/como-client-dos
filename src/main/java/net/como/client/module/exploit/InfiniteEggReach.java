package net.como.client.module.exploit;

import net.como.client.ComoClient;
import net.como.client.event.EventHandler;
import net.como.client.event.impl.MouseButtonEvent;
import net.como.client.module.Module;
import net.como.client.utils.InteractionUtils;
import net.como.client.utils.InventoryUtils;
import net.como.client.utils.RotationUtils;
import net.minecraft.entity.projectile.ProjectileUtil;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.nbt.NbtDouble;
import net.minecraft.nbt.NbtList;
import net.minecraft.network.packet.c2s.play.CreativeInventoryActionC2SPacket;
import net.minecraft.util.Hand;
import net.minecraft.util.hit.EntityHitResult;
import net.minecraft.util.hit.HitResult;
import net.minecraft.util.math.MathHelper;
import net.minecraft.util.math.Vec3d;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.entity.Entity;

public class InfiniteEggReach extends Module {
    public InfiniteEggReach() {
        this.setDescription("Gives you infinite range for spawn eggs.");
        this.setCategory("Exploit");

    }

    // TODO Holy smokes! Something to make a setting!!!
    public double range = 500;
    public double heightOffset = 0;

    private Vec3d getSpawnPos() {
        // Get the rotation vector
        Vec3d rot = RotationUtils.getClientLookVec();

        // Save the localplayer
        PlayerEntity me = ComoClient.getInstance().me();

        // Scale the rotation vector
        Vec3d scaledRot = rot.multiply(range);

        EntityHitResult raycast = ProjectileUtil.raycast(
                me,
                me.getCameraPosVec(0),
                me.getCameraPosVec(0).add(scaledRot),
                me.getBoundingBox().stretch(scaledRot).expand(1, 1, 1),
                Entity::isAttackable,
                500 * 500
        );

        // Check the raycast
        if (raycast != null && raycast.getEntity() != null) {
            return raycast.getPos();
        }

        // Fire another ray
        HitResult hr = me.raycast(range, 0, false);

        // TODO verify the hit result

        // Return its position
        return hr.getPos();
    }

    public void placeSpawnEgg(ItemStack stack) {
        // Get the spawn position
        Vec3d spawnPos = this.getSpawnPos();

        // Add the height offset
        spawnPos = spawnPos.add(0, heightOffset, 0);

        // Get the item's nbt
        NbtCompound nbt = stack.getOrCreateSubNbt("EntityTag");

        // Create an NBT list for the coordinates
        NbtList pos = new NbtList();

        // Populate the components
        pos.add(NbtDouble.of(spawnPos.x));
        pos.add(NbtDouble.of(spawnPos.y));
        pos.add(NbtDouble.of(spawnPos.z));

        // Append it to the nbt
        nbt.put("Pos", pos);

        // Set the item's nbt
        stack.setSubNbt("EntityTag", nbt);

        // Send update packet
        this.updateItemPacket(stack, InventoryUtils.getMainHandSlot());

        // Place the item
        InteractionUtils.fireActive(Hand.MAIN_HAND);
    }

    private void updateItemPacket(ItemStack stack, int slotId) {
        // Create the packet
        CreativeInventoryActionC2SPacket p = new CreativeInventoryActionC2SPacket(
                slotId,
                stack
        );

        // Get the network handler
        ComoClient.getInstance().getClient().getNetworkHandler().sendPacket(p);
    }

    @EventHandler
    public void onClick(MouseButtonEvent event) {
        // Check that it is a mouse down event
        if (event.action != 1) return;

        // Check that the mouse button is the right one
        if (!(
                event.button == 1 ||
                        event.button == 2
        )) return;

        // Get the main hand item (i.e. Hand.MAIN_HAND ...)
        ItemStack item = ComoClient.getInstance().me().getMainHandStack();

        // Check that the item is not air
        if (item.isEmpty()) return;

        // Make sure that it is a spawn egg
        if (!(item.getItem() instanceof net.minecraft.item.SpawnEggItem)) return;

        // Cancel the event
        event.info.cancel();

        // Place the spawn egg
        this.placeSpawnEgg(item);
    }
}
